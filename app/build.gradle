apply plugin: 'com.android.application'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "cl.ucn.disc.dsm.dinews"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        // Version de NDK a utilizar
        ndkVersion "21.0.6011959-rc2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            crunchPngs false
            versionNameSuffix ".d"
        }

        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            crunchPngs true
            versionNameSuffix ".r"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        // Use java 8

    }
    compileOptions {
        // Flag to enable support for the new language APIs
        // coreLibraryDesugaringEnabled false

        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // Override the versionCode and versionName
    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.versionCodeOverride = project.ext.buildTimestamp
            output.versionNameOverride = "One ${project.ext.buildVersion}"
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildFeatures {
        // Determines whether to enable support for Jetpack Compose.
        // https://developer.android.com/jetpack/compose
        compose = false
        // Determines whether to generate a BuildConfig class.
        buildConfig = true
        // Determines whether to support View Binding.
        viewBinding = true
        // Determines whether to support Data Binding.
        dataBinding = true
        // Determines whether to generate binder classes for your AIDL files.
        aidl = true
        // Determines whether to support RenderScript. (default true)
        renderScript = true
        // Determines whether to support injecting custom variables into the module's R class.
        resValues = true
        // Determines whether to support shader AOT compilation.
        shaders = true
    }

}

dependencies {
    // Okhttp: https://square.github.io/okhttp/
    def okhttp_version = "4.3.0"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Prettytime
    implementation "org.ocpsoft.prettytime:prettytime:4.0.2.Final"

    // Fresco (Images):
    def fresco_version = "2.1.0"
    implementation "com.facebook.fresco:fresco:$fresco_version"
    implementation "com.facebook.fresco:imagepipeline-okhttp:$fresco_version"

    // Latest androidx versions:
    // https://developer.android.com/feeds/androidx-release-notes.xml

    // https://mvnrepository.com/artifact/com.android.databinding/baseLibrary
    implementation group: 'com.android.databinding', name: 'baseLibrary', version: '3.6.1'
    // JUnit
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0-M1'

    // AppCompat: https://developer.android.com/jetpack/androidx/releases/appcompat
    implementation 'androidx.appcompat:appcompat:1.2.0-alpha03'

    // Test: https://developer.android.com/jetpack/androidx/releases/test
    androidTestImplementation 'androidx.test.ext:junit:1.1.2-alpha04'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha04'

    // RecyclerView: https://developer.android.com/jetpack/androidx/releases/recyclerview
    implementation "androidx.recyclerview:recyclerview:1.2.0-alpha01"

    // SwipeRefreshLayout https://developer.android.com/jetpack/androidx/releases/swiperefreshlayout
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0-beta01"

    // SLF4J
    implementation 'org.slf4j:slf4j-api:1.7.30'

    // implementation 'ch.qos.logback:logback-classic:1.3.0-alpha5'
    implementation "com.github.tony19:logback-android:2.0.0"

    // Only in android
    // runtimeOnly "com.github.tony19:logback-android:2.0.0"
    testImplementation "ch.qos.logback:logback-classic:1.3.0-alpha5"


    // ACRA (disabled)
    // def acra_version = "5.4.0"
    // implementation "ch.acra:acra-mail:$acra_version"
    // implementation "ch.acra:acra-dialog:$acra_version"
    // implementation "ch.acra:acra-notification:$acra_version"
    // implementation "ch.acra:acra-toast:$acra_version"

    // Leak Canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0'

    // Constraintlayout
    implementation "androidx.constraintlayout:constraintlayout:2.0.0-beta4"

    // https://mvnrepository.com/artifact/org.threeten/threetenbp
    //implementation group: 'org.threeten', name: 'threetenbp', version: '1.4.0'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.2'

    // https://github.com/GrenderG/Toasty
    implementation 'com.github.GrenderG:Toasty:1.4.2'

    // Retrofit: https://square.github.io/retrofit/
    def retrofit_version = "2.7.1"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // Gson: https://github.com/google/gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // Commons Lang3: https://commons.apache.org/proper/commons-lang/
    implementation 'org.apache.commons:commons-lang3:3.9'

    // Hashing functions
    // https://github.com/OpenHFT/Zero-Allocation-Hashing
    implementation "net.openhft:zero-allocation-hashing:0.10.1"



}